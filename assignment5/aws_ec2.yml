# plugin: amazon.aws.aws_ec2
# regions:
#   - us-east-1
# filters:
#   tag:Name:
#     - ansible
#    - redhat
# plugin: amazon.aws.aws_ec2
# regions:
#   - us-east-1
# # keyed_groups:
# #   - key: tags.aws
# filters:
#   instance-state-name: running
#   tag:key:
#     - aws
#     # Only include running instances
# remote_user: ubuntu
# compose:
#    ansible_host: public_ip_address  # For public instances
#    ansible_host: private_ip_address  # Uncomment if using private instances
# # Optional: Use strict mode to enforce only these hosts
# strict: False
# # Optional: cache the inventory for better performance
# cache: True
# cache_timeout: 600  # seconds
# ansible_ssh_common_args: '-o ConnectTimeout=60'

# plugin: amazon.aws.aws_ec2
# regions:
#   - us-east-1
# filters:
#   instance-state-name: running
#   tag:key:
#     - aws
#     - redhat
# compose:
#   ansible_host: private_ip_address  # Use private IPs for private instances
# strict: False  # Only include hosts matching the filter criteria
# cache: True
# cache_timeout: 600
# ansible_ssh_common_args: '-o ConnectTimeout=60'
# remote_user: ubuntu  # The user to use for SSH
# keyed_groups:
#   - key: tags.Name  # Group instances by their Name tag

# ansible_ssh_common_args: '-o ProxyCommand="ssh -W %h:%p -i /home/ubuntu/nvirinia.pem ubuntu@35.175.202.201"'

plugin: aws_ec2
regions:
  - "ap-south-1"
filters:
  tag:DB:
    - mysql
  instance-state-name : running
compose:
  ansible_host: private_ip_address
